#include "idl_types.h"

/*
  just the string type definitions copied from - lsa interface definition
*/


[ uuid("12345778-1234-abcd-ef00-0123456789ab"),
  version(0.0),
  endpoint("ncacn_np:[\\pipe\\lsarpc]","ncacn_np:[\\pipe\\netlogon]","ncacn_np:[\\pipe\\lsass]", "ncacn_ip_tcp:", "ncalrpc:"),
  pointer_default(unique),
  helpstring("Local Security Authority")
] interface lsarpc
{

    import security.idl;

	typedef bitmap security_secinfo security_secinfo;

	typedef [public,noejs] struct {
		[value(2*strlen_m(string))] uint16 length;
		[value(2*strlen_m(string))] uint16 size;
		[charset(UTF16),size_is(size/2),length_is(length/2)] uint16 *string;
	} lsa_String;

	typedef [public] struct {
		[value(2*strlen_m(string))] uint16 length;
		[value(2*strlen_m_term(string))] uint16 size;
		[charset(UTF16),size_is(size/2),length_is(length/2)] uint16 *string;
	} lsa_StringLarge;

	typedef [public] struct {
		uint32 count;
		[size_is(count)] lsa_String *names;
	} lsa_Strings;

	typedef [public] struct {
		[value(strlen_m(string))] uint16 length;
		[value(strlen_m(string))] uint16 size;
		[charset(DOS),size_is(size),length_is(length)] uint8 *string;
	} lsa_AsciiString;

	typedef [public] struct {
		[value(strlen_m(string))] uint16 length;
		[value(strlen_m_term(string))] uint16 size;
		[charset(DOS),size_is(size),length_is(length)] uint8 *string;
	} lsa_AsciiStringLarge;


}
