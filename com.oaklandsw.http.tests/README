Current test failures:

Release 2.6.1 31 Jan 09

TestAxis1 - test10Proxy
TestAxis2 - testWsAmazon
TestIIS - test10Proxy
TestFtpProxy - testProxy, test10Proxy, testAuthProxy

TestURLConn - testIpv6_1, _3 fail, due to this: https://bugs.launchpad.net/ubuntu/+source/apache2/+bug/397393


There was probably something that changed in Squid since the 10 proxy tests last passed.



Building and Running the tests

0) turn off automatic build in eclipse to make sure it does not interfere
   with the build script
1) run the build.sh script in com.oaklandsw.http using JDK 1.4 (or higher) on Linux
2) test with JDK 1.4, 1.5, and 1.6 using run.sh com.oaklandsw.http.tests
3) test with JDK 1.2 on windows using runw.sh
4) test the source build by unziping it and running 'ant', then the runsrcsample.sh script
5) test the runtime build by unzipping it and running the com.oaklandsw.http.tests/runlocalsample.sh
6) as above, but with eval build, make sure it shows eval message (delete ~/.xmlfuoshc file first)
7) see the release checklist for finishing the release (website, swreg, pad, etc)


Running the tests, and setting up software for the tests.
----------------------------------------------------------

(see also the HttpTestEnv file)

First, you will need to make sure you have the following servers
running:

Window machine - default is repoman
Linux machine - default is berlioz
win2k3 (vm windows 2003 server running ISA - NTLM level 5, also IIS with digest auth on port 80)
win2k3-2 (vm windows 2003 running IIS, NTLM level 0)

All of these ports and hosts are controlled by properties, see the HttpTestEnv file.

Port  Server

80    	Apache (this must be configured as a proxy server on port 80)
80		IIS (windows)
8181-4  Tomcat 6.x (linux) - 4 servers
8086  	Error Server (linux)

8088 	NetProxy (windows)
8089  	Apache (as proxy server) (linux)

3128  	Squid (linux)

1080    SOCKS (win2k3 vm - ISA server)


Instructions for each type of server:

SQUID - port 3128

See machine configuration in Wiki for Squid setup. 


HTTPD - ports 80, 8089

This is expected to be the standard webserver and the authenticated proxy server.

Setting up Apache Auth Proxy server (port 8089)
    public static int     TEST_AUTH_PROXY_PORT           = 8089;

Set up a virtual host for port 8089, pointing to a password file (testProxyPasswords)
containing the following user/password:
    public static String  TEST_AUTH_PROXY_USER           = "testProxy";
    public static String  TEST_AUTH_PROXY_PASSWORD       = "test839Proxy";
    
Be sure and specify the "listen" directive for the auth proxy port.

This is also used for the WebDAV testing.  There are parts of the httpd.conf
file that point WebDAV to the right document root which is called "dav" in htdocs.

Start httpd by using /etc/rc.d/rc4.d/K15httpd


TOMCAT - port 8080

This is installed in /usr/local/apache-tomcat.  Port 8080 is the default tomcat port.

Test deployment to the tomcat server.

The com.oaklandsw.http.servlet package in the tests gets built into the 
oaklandsw-http.war by the http-war ant target.

This also contains a copy of the http client (http.jar, httptests.jar, log4j.jar)
in order to test Java web start.

Put this in the webapp directory of the tomcat installation (typically
on repoman) and restart the cat.  Make sure you delete the oaklandsw-http directory
before you restart the cat.

The oaklandsw-http.war file is checked in to make things easier.

TOMCAT - webstart:

httptests.jnlp in the outer test directory is the only one currently used for
the webstart tests; the file deployment[-signed].jar is also part of these tests.
This file has the TOMCAT host (currently berlioz 192.168.1.25) wired into it
so that it works properly on all machines.

There is another httptests.jnlp which is includes in the webapps directory;
This is used if you want to test with JWS from the jnlp itself downloaded from TomCat.
It's currently not used.


Axis

This uses Axis V1.4 (any 1.x after that is fine).  Axis2 is not presently used, even though
it may be installed.

The tests (both Axis2 and Axis) depend on Axis being installed on the webapp (above) Tomcat in the axis
directory.

To do this, get the binary kit for Axis and just copy the webapps/axis directory into 
the tomcat webapps directory.

Also, you will need to update the Tomcat webapps.policy to include: 
   permission java.security.AllPermission;

The com.oaklandsw.http.webservice package contains the web services to be deployed for testing.
None are used right now, testing is done only with the Axis built-in services.

The webservice2 package is setup for Axis2 and is not currently used.

Tomcat must be manually started using /usr/local/apache-tomcat/bin/startup.sh.

To get the wsdl, add the ?wsdl extension to the end of the file, this should return the wsdl file.

The only wsdl file used for the Axis/Axis2 stub testing is List.wsdl in the com.oaklandsw.http.tests
directory.


Axis2 testing

The product supports Axis2 versions from 1.2 through 1.5, to do this reflection is used.  It is also
used in the tests.  Each of the versions needs to be tested manually using the following steps:

1) Change the dependent Axis plugin to the one for the correct version in the manifest
for com.oaklandsw.http.jars
2) Copy the correct stub files from the sharepointStubs folder into the src/sharepoint folder.


IIS - windows port 80

Install IIS by going to add/remove programs and installing a windows component.

The test application is simply the Form_JScript.asp sample that comes with IIS.
Move this to the root directory for the server.

The test web service application is in iiswebservice/HelloWorld.asmx.  Just
put this in the root directory for the server.

Make sure the name of the server is correct in iiswebservice/HelloWorld.wsdl.

IIS should be started on the boot of the windows machine.


ERROR SERVER - port 8086

This is just a java program called com.oaklandsw.http.tests.server.ErrorServer.


NETPROXY (on Windows):

Download from the netproxy site, set the port number in the configuration, 
and enable www proxying.

Be sure and turn off the firewall, set incoming to accept all connections.

start -> netproxy -> netproxy configuration.

Ignore errors about evaluation period having expired.

This can be installed as an NT service and started automatically.  Do this.



OTHER

To use different implementations of the HTTP client, specify

-Dsun - sun implementation
-Dinno - innovation.ch implementation









