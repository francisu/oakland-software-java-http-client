<?xml version="1.0" encoding="UTF-8"?>
<!--
 !
 ! Copyright 2006 The Apache Software Foundation.
 !
 ! Licensed under the Apache License, Version 2.0 (the "License");
 ! you may not use this file except in compliance with the License.
 ! You may obtain a copy of the License at
 !
 !      http://www.apache.org/licenses/LICENSE-2.0
 !
 ! Unless required by applicable law or agreed to in writing, software
 ! distributed under the License is distributed on an "AS IS" BASIS,
 ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ! See the License for the specific language governing permissions and
 ! limitations under the License.
 !-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.apache.axis2</groupId>
		<artifactId>axis2-parent</artifactId>
		<version>1.2</version>
		<relativePath>../parent/pom.xml</relativePath>
	</parent>
	<artifactId>axis2-adb-codegen</artifactId>
	<name>Apache Axis 2.0 - ADB Codegen</name>
	<description>ADB code generation support for Axis2</description>
	<dependencies>
		<dependency>
			<groupId>org.apache.axis2</groupId>
			<artifactId>axis2-adb</artifactId>
			<version>${version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.axis2</groupId>
			<artifactId>axis2-codegen</artifactId>
			<version>${version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.axis2</groupId>
			<artifactId>axis2-kernel</artifactId>
			<version>${version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.ws.commons.schema</groupId>
			<artifactId>XmlSchema</artifactId>
		</dependency>
		<dependency>
			<groupId>xmlunit</groupId>
			<artifactId>xmlunit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>
	<build>
		<sourceDirectory>src</sourceDirectory>
		<testSourceDirectory>test</testSourceDirectory>
		<resources>
			<resource>
				<directory>conf</directory>
				<excludes>
					<exclude>**/*.properties</exclude>
				</excludes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<inherited>true</inherited>
				<configuration>
					<skip>false</skip>
					<excludes>
						<exclude>**/*Abstract*.java</exclude>
						<exclude>**/*Util*.java</exclude>
						<exclude>**/*PhaseResolvingTest.java</exclude>
					</excludes>
					<includes>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-test-sources</id>
						<phase>generate-test-sources</phase>
						<configuration>
							<tasks>
								<property name="compiled.classes.dir" location="target/classes"/>
								<property name="test.compiled.classes.dir" location="target/test-classes"/>
								<property name="schema.source.dir" location="test-resources/xsd"/>
								<property name="testsuite.source.dir" location="test-resources/testsuite"/>
								<property name="schema.output.base.dir" location="target/schema"/>
								<property name="schema.generated.src.dir" location="${schema.output.base.dir}/src"/>
								<property name="schema.generated.classes.dir" location="${schema.output.base.dir}/classes"/>
								<property name="maven.junit.jvmargs" value=""/>
								<!-- make the dirs -->
								<mkdir dir="${schema.output.base.dir}"/>
								<mkdir dir="${schema.generated.src.dir}"/>
								<mkdir dir="${schema.generated.classes.dir}"/>
								<mkdir dir="${test.compiled.classes.dir}"/>
								<!-- Run schema compiler with designated schemas -->
								<echo>Compiling simple_maxOccurs2.xsd</echo>
								<!-- simple max occurs 2 xsd -->
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${schema.source.dir}/simple_maxOccurs2.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<echo>Compiling anonymous_complexType.xsd</echo>
								<!-- anon complex type xsd -->
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${schema.source.dir}/anonymous_complexType.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- anon choice xsd -->
								<echo>Compiling simple_choice.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${schema.source.dir}/simple_choice.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- anon particle all xsd -->
								<echo>Compiling simple_particle_all.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${schema.source.dir}/simple_particle_all.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- simple max occurs xsd -->
								<echo>Compiling simple_maxOccurs.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${schema.source.dir}/simple_maxOccurs.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- simple any type xsd -->
								<echo>Compiling simple_anytype.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${schema.source.dir}/simple_anytype.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- min occurs 0 xsd -->
								<echo>Compiling simple-minoccurs0.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${schema.source.dir}/simple-minoccurs0.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- complex min occurs 0 xsd -->
								<echo>Compiling complex-minoccurs0.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${schema.source.dir}/complex-minoccurs0.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<echo>Compiling simple-recursive-datatypes.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${schema.source.dir}/simple-recursive-datatypes.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<echo>Compiling mixed_minoccus0.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${schema.source.dir}/mixed_minoccus0.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- ################################################################### -->
								<!-- All simple primitive types xsd -->
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${schema.source.dir}/simple/simpleType-All.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- All simple derived types xsd -->
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${schema.source.dir}/derived/derivedType-All.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- ################################################################### -->
								<!-- All simple derived types xsd -->
								<echo>Compiling complete.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${testsuite.source.dir}/complete.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- ################################################################### -->
								<!-- All simple derived types xsd -->
								<echo>Compiling simpleExtension.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${testsuite.source.dir}/extensions.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- ################################################################### -->
								<!-- All simple derived types xsd -->
								<echo>Compiling union.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${testsuite.source.dir}/union.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- ################################################################### -->
								<!-- All simple derived types xsd -->
								<echo>Compiling all.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${testsuite.source.dir}/all.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- ################################################################### -->
								<!-- All simple derived types xsd -->
								<echo>Compiling enumeration.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${testsuite.source.dir}/enumeration.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- ################################################################### -->
								<!-- All simple derived types xsd -->
								<echo>Compiling restrictions.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${testsuite.source.dir}/restrictions.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- ################################################################### -->
								<!-- All simple derived types xsd -->
								<echo>Compiling choice.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${testsuite.source.dir}/choice.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- ################################################################### -->
								<!-- All simple derived types xsd -->
								<echo>Compiling list.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${testsuite.source.dir}/list.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- ################################################################### -->
								<!-- All simple derived types xsd -->
								<echo>Compiling element_references.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${testsuite.source.dir}/element_references.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- ################################################################### -->
								<!-- All simple derived types xsd -->
								<echo>Compiling innersequence_choice.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${testsuite.source.dir}/innersequence_choice.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- ################################################################### -->
								<!-- All simple derived types xsd -->
								<echo>Compiling testattribute.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${testsuite.source.dir}/testattribute.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
								<!-- ################################################################### -->
								<!-- All simple derived types xsd -->
								<echo>Compiling boolean.xsd</echo>
								<java classname="org.apache.axis2.schema.XSD2Java" fork="true">
									<jvmarg line="${maven.junit.jvmargs}"/>
									<classpath refid="maven.runtime.classpath"/>
									<classpath location="${compiled.classes.dir}"/>
									<arg file="${testsuite.source.dir}/boolean.xsd"/>
									<arg file="${schema.generated.src.dir}"/>
								</java>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${basedir}/target/schema/src</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
